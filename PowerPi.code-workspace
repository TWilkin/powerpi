{
    "folders": [
        {
            "name": "PowerPi",
            "path": ".",
        },

        // Common
        {
            "name": "Common API",
            "path": "common/node/common-api",
        },
        {
            "name": "Common Node",
            "path": "common/node/common",
        },
        {
            "name": "Common Node Test",
            "path": "common/node/common-test",
        },
        {
            "name": "Common Python",
            "path": "common/python",
        },
        {
            "name": "Common Python Test",
            "path": "common/pytest",
        },

        // Services
        {
            "name": "API",
            "path": "services/api",
        },
        {
            "name": "Config Server",
            "path": "services/config-server",
        },
        {
            "name": "Energy Monitor",
            "path": "services/energy-monitor",
        },
        {
            "name": "Event",
            "path": "services/event",
        },
        {
            "name": "Persistence",
            "path": "services/persistence",
        },
        {
            "name": "Scheduler",
            "path": "services/scheduler",
        },
        {
            "name": "Shutdown",
            "path": "services/shutdown",
        },
        {
            "name": "UI",
            "path": "services/ui",
        },
        {
            "name": "Voice Assistant",
            "path": "services/voice-assistant",
        },

        // Controllers
        {
            "name": "Energenie Controller",
            "path": "controllers/energenie",
        },
        {
            "name": "Harmony Controller",
            "path": "controllers/harmony",
        },
        {
            "name": "LIFX Controller",
            "path": "controllers/lifx",
        },
        {
            "name": "Network Controller",
            "path": "controllers/network",
        },
        {
            "name": "Snapcast Controller",
            "path": "controllers/snapcast",
        },
        {
            "name": "Virtual Controller",
            "path": "controllers/virtual",
        },
        {
            "name": "ZigBee Controller",
            "path": "controllers/zigbee",
        },

        // Other
        {
            "name": "Sensors",
            "path": "sensors",
        },
        {
            "name": "Kubernetes",
            "path": "kubernetes",
        },
    ],
    "launch": {
        "version": "0.2.0",
        "configurations": [],
        "compounds": [],
    },
    "tasks": {
        "version": "2.0.0",
        "tasks": [
            {
                "label": "Build node libraries",
                "command": "yarn build:lib",
                "type": "shell",
                "presentation": {
                    "reveal": "always",
                },
                "group": "build",
            },
            {
                "label": "Clean node",
                "command": "yarn clean",
                "type": "shell",
                "presentation": {
                    "reveal": "always",
                },
            },
            {
                "label": "Version service",
                "command": "bash ${workspaceFolder}/.github/scripts/version.sh --service ${input:service} --version ${input:versionPart} --chart-version ${input:chartVersionPart} --commit",
                "type": "shell",
                "presentation": {
                    "reveal": "always",
                },
                "problemMatcher": [],
            },
            {
                "label": "Version release",
                "command": "bash ${workspaceFolder}/.github/scripts/version.sh --release --version ${input:versionPart} --chart-version ${input:chartVersionPart} --commit",
                "type": "shell",
                "presentation": {
                    "reveal": "always",
                },
                "problemMatcher": [],
            },
        ],
        "inputs": [
            {
                "id": "service",
                "description": "The name of the service",
                "type": "promptString",
            },
            {
                "id": "versionPart",
                "description": "The part of the service/release version to increase, either major, minor or patch",
                "default": "minor",
                "type": "promptString",
            },
            {
                "id": "chartVersionPart",
                "description": "The part of the Kubernetes chart version to increase, either major, minor or patch",
                "default": "minor",
                "type": "promptString",
            },
        ],
    },
    "settings": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit",
        },
        "[scss]": {
            "editor.defaultFormatter": "esbenp.prettier-vscode",
        },
        "[javascript]": {
            "editor.defaultFormatter": "esbenp.prettier-vscode",
        },
        "[json]": {
            "editor.defaultFormatter": "esbenp.prettier-vscode",
        },
        "[jsonc]": {
            "editor.defaultFormatter": "esbenp.prettier-vscode",
        },
        "[typescript]": {
            "editor.defaultFormatter": "esbenp.prettier-vscode",
        },
        "[typescriptreact]": {
            "editor.defaultFormatter": "esbenp.prettier-vscode",
        },
        "[yaml]": {
            "editor.defaultFormatter": "redhat.vscode-yaml",
        },
        "[helm]": {
            "editor.defaultFormatter": "redhat.vscode-yaml",
        },
        "[python]": {
            "editor.defaultFormatter": "ms-python.autopep8",
        },
        "editor.formatOnSave": true,
        "jest.disabledWorkspaceFolders": [
            "PowerPi",
            "Common API",
            "Common Node",
            "Common Node Test",
            "Common Python",
            "Common Python Test",
            "Config Server",
            "Energy Monitor",
            "Event",
            "Scheduler",
            "Shutdown",
            "UI",
            "Energenie Controller",
            "Harmony Controller",
            "LIFX Controller",
            "Network Controller",
            "Snapcast Controller",
            "Virtual Controller",
            "ZigBee Controller",
            "Sensors",
            "Kubernetes",
        ],
        "pylint.args": ["--rcfile=${workspaceFolder}/../../.pylintrc"],
        "python.testing.unittestEnabled": false,
        "python.testing.pytestEnabled": true,
        "tailwindCSS.experimental.classRegex": [
            ["Classes \\=([^;]*);", "'([^']*)'"],
            ["Classes \\=([^;]*);", "\"([^\"]*)\""],
            ["Classes \\=([^;]*);", "\\`([^\\`]*)\\`"],
        ],
    },
    "extensions": {
        "recommendations": [
            "golang.Go",
            "ms-kubernetes-tools.vscode-kubernetes-tools",
            "dbaeumer.vscode-eslint",
            "esbenp.prettier-vscode",
            "Orta.vscode-jest",
            "ms-python.python",
            "ms-python.pylint",
            "ms-python.autopep8",
            "redhat.vscode-yaml",
            "SonarSource.sonarlint-vscode",
            "bradlc.vscode-tailwindcss",
            "vitest.explorer",
        ],
    },
}
