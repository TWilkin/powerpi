{{- define "powerpi.generate-mosquitto-secret" -}}
{{- $secretObj := (lookup "v1" "Secret" .Release.Namespace .Params.Name) | default dict -}}
{{- $secretData := (get $secretObj "data") | default dict -}}
{{- (get $secretData "password") | default (randAlphaNum 32 | b64enc) -}}
{{- end -}}

{{- define "powerpi.mosquitto-passwords" -}}
{{- $passwords := (list
  (print "api:" .Params.ApiSecret)
  (print "controller:" .Params.ControllerSecret)
  (print "device:" .Params.DeviceSecret)
) -}}
{{- if eq .Values.global.config true -}}
{{- $passwords = append $passwords (print "config:" .Params.ConfigSecret) -}}
{{- end -}}
{{- if eq .Values.global.persistence true -}}
{{- $passwords = append $passwords (print "persistence:" .Params.PersistenceSecret) -}}
{{- end -}}
{{- if eq .Values.global.scheduler true -}}
{{- $passwords = append $passwords (print "scheduler:" .Params.SchedulerSecret) -}}
{{- end -}}
{{- if eq .Params.HasSensors true -}}
{{- $passwords = append $passwords (print "sensor:" .Params.SensorSecret) -}}
{{- end -}}
{{- if eq .Values.global.voiceAssistant true -}}
{{- $passwords = append $passwords (print "voice:" .Params.VoiceSecret) -}}
{{- end -}}
{{- join "\n" $passwords -}}
{{- end -}}

{{- $hasSensors := or (eq .Values.global.useSensors true) (eq .Values.global.energyMonitor true) -}}

{{- $configSecret := "" -}}
{{- $persistenceSecret := "" -}}
{{- $schedulerSecret := "" -}}
{{- $sensorSecret := "" -}}
{{- $voiceSecret := "" -}}

{{- $apiSecret := include "powerpi.generate-mosquitto-secret" (merge (dict "Params" (dict
  "Name" "mosquitto-api-secret"
)) . ) -}}

{{- if eq .Values.global.config true -}}
{{- $configSecret = include "powerpi.generate-mosquitto-secret" (merge (dict "Params" (dict
  "Name" "mosquitto-config-secret"
)) . ) -}}
{{- end -}}

{{- $controllerSecret := include "powerpi.generate-mosquitto-secret" (merge (dict "Params" (dict
  "Name" "mosquitto-controller-secret"
)) . ) -}}

{{- $deviceSecret := include "powerpi.generate-mosquitto-secret" (merge (dict "Params" (dict
  "Name" "mosquitto-device-secret"
)) . ) -}}

{{- if eq .Values.global.persistence true -}}
{{- $persistenceSecret = include "powerpi.generate-mosquitto-secret" (merge (dict "Params" (dict
  "Name" "mosquitto-persistence-secret"
)) . ) -}}
{{- end -}}

{{- if eq .Values.global.scheduler true -}}
{{- $schedulerSecret = include "powerpi.generate-mosquitto-secret" (merge (dict "Params" (dict
  "Name" "mosquitto-scheduler-secret"
)) . ) -}}
{{- end -}}

{{- if eq $hasSensors true -}}
{{- $sensorSecret = include "powerpi.generate-mosquitto-secret" (merge (dict "Params" (dict
  "Name" "mosquitto-sensor-secret"
)) . ) -}}
{{- end -}}

{{- if eq .Values.global.voiceAssistant true -}}
{{- $voiceSecret = include "powerpi.generate-mosquitto-secret" (merge (dict "Params" (dict
  "Name" "mosquitto-voice-secret"
)) . ) -}}
{{- end -}}

{{- $mosquittoPasswords := dict
  "HasSensors" $hasSensors
  "ApiSecret" ($apiSecret | b64dec)
  "ConfigSecret" ($configSecret | b64dec)
  "ControllerSecret" ($controllerSecret | b64dec)
  "DeviceSecret" ($deviceSecret | b64dec)
  "PersistenceSecret" ($persistenceSecret | b64dec)
  "SchedulerSecret" ($schedulerSecret | b64dec)
  "SensorSecret" ($sensorSecret | b64dec)
  "VoiceSecret" ($voiceSecret | b64dec)
-}}

apiVersion: v1
kind: Secret
metadata:
  name: mosquitto-passwords-secret
  {{- include "powerpi.labels" . }}
type: Opaque
data:
  passwords: {{ include "powerpi.mosquitto-passwords" (merge (dict "Params" $mosquittoPasswords) . ) | b64enc }}
---

apiVersion: v1
kind: Secret
metadata:
  name: mosquitto-api-secret
  {{- include "powerpi.labels" . }}
type: Opaque
data:
  username: {{ "api" | b64enc | quote }}
  password: {{ $apiSecret | quote }}
---

{{- if eq .Values.global.config true -}}
apiVersion: v1
kind: Secret
metadata:
  name: mosquitto-config-secret
  {{- include "powerpi.labels" . }}
type: Opaque
data:
  username: {{ "config" | b64enc | quote }}
  password: {{ $configSecret | quote }}
---
{{- end -}}

apiVersion: v1
kind: Secret
metadata:
  name: mosquitto-controller-secret
  {{- include "powerpi.labels" . }}
type: Opaque
data:
  username: {{ "controller" | b64enc | quote }}
  password: {{ $controllerSecret | quote }}
---

apiVersion: v1
kind: Secret
metadata:
  name: mosquitto-device-secret
  {{- include "powerpi.labels" . }}
type: Opaque
data:
  username: {{ "device" | b64enc | quote }}
  password: {{ $deviceSecret | quote }}
---

{{- if eq .Values.global.persistence true -}}
apiVersion: v1
kind: Secret
metadata:
  name: mosquitto-persistence-secret
  {{- include "powerpi.labels" . }}
type: Opaque
data:
  username: {{ "persistence" | b64enc | quote }}
  password: {{ $persistenceSecret | quote }}
---
{{- end -}}

{{- if eq .Values.global.scheduler true -}}
apiVersion: v1
kind: Secret
metadata:
  name: mosquitto-scheduler-secret
  {{- include "powerpi.labels" . }}
type: Opaque
data:
  username: {{ "scheduler" | b64enc | quote }}
  password: {{ $schedulerSecret | quote }}
---
{{- end -}}

{{- if eq $hasSensors true -}}
apiVersion: v1
kind: Secret
metadata:
  name: mosquitto-sensor-secret
  {{- include "powerpi.labels" . }}
type: Opaque
data:
  username: {{ "sensor" | b64enc | quote }}
  password: {{ $sensorSecret |  quote }}
---
{{- end -}}

{{- if eq .Values.global.voiceAssistant true -}}
apiVersion: v1
kind: Secret
metadata:
  name: mosquitto-voice-secret
  {{- include "powerpi.labels" . }}
type: Opaque
data:
  username: {{ "voice" | b64enc | quote }}
  password: {{ $voiceSecret | quote }}
{{- end -}}
