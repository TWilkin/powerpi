apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  {{- include "powerpi.labels" . }}
  annotations:
    {{- if eq .Values.global.useSSL true }}
    cert-manager.io/issuer: {{ ternary "letsencrypt" .Values.global.clusterIssuer (eq .Values.global.clusterIssuer nil) }}
    {{- end }}
spec:
  ingressClassName: public
  {{- if eq .Values.global.useSSL true }}
  tls:
  - hosts:
    - {{ .Values.global.externalHostName }}
    secretName: {{ ternary "letsencrypt" "main-cert" (eq .Values.global.clusterIssuer nil) }}
  {{- end }}
  rules:
  - host: {{ .Values.global.externalHostName }}
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 80
      {{- if eq .Values.global.voiceAssistant true }}
      - path: /webhook_alexa
        pathType: Prefix
        backend:
          service:
            name: voice-assistant
            port:
              number: 80
      {{- end }}
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ui
            port:
              number: 80

{{- if eq .Values.global.useCluster true }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-ha
  {{- include "powerpi.labels" . }}
  annotations:
    {{- if eq .Values.global.useSSL true }}
    cert-manager.io/issuer: {{ ternary "letsencrypt" .Values.global.clusterIssuer (eq .Values.global.clusterIssuer nil) }}
    {{- end }}
    {{- if eq .Values.global.useCluster true }}
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    {{- end }}
spec:
  ingressClassName: public
  {{- if eq .Values.global.useSSL true }}
  tls:
  - hosts:
    - {{ .Values.global.externalHostName }}
    secretName: {{ ternary "letsencrypt" "main-cert" (eq .Values.global.clusterIssuer nil) }}
  {{- end }}
  rules:
  - host: {{ .Values.global.externalHostName }}
    http:
      paths:
      - path: /api/auth
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 80
      - path: /api/socket.io
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 80
{{- end }}
