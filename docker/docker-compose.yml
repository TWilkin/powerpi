version: "3.3"

services:
    mosquitto:
        image: eclipse-mosquitto:2.0.14
        networks:
            - powerpi
        ports:
            - "1883:1883"
        deploy:
            replicas: 1
        volumes:
            - /srv/docker-volumes/powerpi/mosquitto/data:/mosquitto/data
        configs:
            - source: mosquitto_config
              target: /mosquitto/config/mosquitto.conf

    clacks-config:
        build: ../clacks-config
        image: ${REGISTRY}/powerpi/clacks-config:0.0.3
        networks:
            - powerpi
        deploy:
            replicas: 1
        depends_on:
            - mosquitto
        secrets:
            - powerpi_github
        environment:
            - GITHUB_USER=${GITHUB_USER}
            - GITHUB_SECRET_FILE=/var/run/secrets/powerpi_github
            - FILE_PATH=docker/config

    deep-thought:
        build: ../deep-thought
        image: ${REGISTRY}/powerpi/deep-thought:0.5.10
        networks:
            - powerpi
        deploy:
            replicas: 1
        depends_on:
            - db
            - mosquitto
        secrets:
            - powerpi_db
            - powerpi_google_auth
            - powerpi_jwt_auth
            - powerpi_session
            - powerpi_oauth
        environment:
            - EXTERNAL_HOST_NAME=${EXTERNAL_HOST_NAME}
            - EXTERNAL_PORT=${EXTERNAL_PORT}
            - DB_HOST=db
            - DB_SCHEMA=powerpi
            - DB_USER=powerpi
            - DB_SECRET_FILE=/var/run/secrets/powerpi_db
            - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            - GOOGLE_SECRET_FILE=/var/run/secrets/powerpi_google_auth
            - JWT_SECRET_FILE=/var/run/secrets/powerpi_jwt_auth
            - SESSION_SECRET_FILE=/var/run/secrets/powerpi_session
            - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
            - OAUTH_SECRET_FILE=/var/run/secrets/powerpi_oauth

    babel-fish:
        build: ../babel-fish
        image: ${REGISTRY}/powerpi/babel-fish:0.0.5
        networks:
            - powerpi
        deploy:
            replicas: 1
        depends_on:
            - deep-thought

    macro-controller:
        image: ${REGISTRY}/powerpi/controllers/macro:1.1.0
        networks:
            - powerpi
        deploy:
            replicas: 1
        depends_on:
            - mosquitto

    device-mapper-energenie:
        build: ../device-mapper
        image: ${REGISTRY}/powerpi/device-mapper:0.0.5
        networks:
            - powerpi
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.energenie == true
        depends_on:
            - mosquitto
        environment:
            - ENV=ENERGENIE_DEVICE=ENER314-RT:DEVICE_FATAL=true
            - CONTROLLER_NAME=energenie-controller
            - IMAGE=${REGISTRY}/powerpi/controllers/energenie:0.0.9
            - DEVICE=/dev/gpiomem
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    harmony-controller:
        image: ${REGISTRY}/powerpi/controllers/harmony:0.1.0
        networks:
            - powerpi
        deploy:
            replicas: 1
        depends_on:
            - mosquitto

    lifx-controller:
        image: ${REGISTRY}/powerpi/controllers/lifx:0.1.0
        networks:
            - powerpi
        deploy:
            replicas: 1
        depends_on:
            - mosquitto

    device-mapper-zigbee:
        image: ${REGISTRY}/powerpi/device-mapper:0.0.5
        networks:
            - powerpi
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.zigbee == true
        depends_on:
            - mosquitto
        environment:
            - ENV=ZIGBEE_DEVICE=/dev/ttyACM0:DATABASE_PATH=/var/data/zigbee.db
            - CONTROLLER_NAME=zigbee-controller
            - IMAGE=${REGISTRY}/powerpi/controllers/zigbee:0.1.0
            - DEVICE=/dev/ttyACM0
            - VOLUME=/srv/docker-volumes/powerpi/zigbee-controller
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    light-fantastic:
        build: ../light-fantastic
        image: ${REGISTRY}/powerpi/light-fantastic:0.2.1
        networks:
            - powerpi
        deploy:
            replicas: 1
        depends_on:
            - mosquitto

    freedns:
        build: ../freedns
        image: ${REGISTRY}/powerpi/freedns:0.0.8
        networks:
            - powerpi
        deploy:
            replicas: 1
        secrets:
            - powerpi_freedns
        environment:
            - FREEDNS_USER=${FREEDNS_USER}
            - FREEDNS_PASSWORD=/var/run/secrets/powerpi_freedns

    nginx:
        build: ../nginx
        image: ${REGISTRY}/powerpi/nginx:1.2.6
        networks:
            - powerpi
        ports:
            - "3001:8080"
            - "3000:8443"
        deploy:
            replicas: 1
        depends_on:
            - deep-thought
            - babel-fish
        volumes:
            - /srv/docker-volumes/powerpi/certbot/conf:/etc/letsencrypt
            - /srv/docker-volumes/powerpi/certbot/www:/var/www/certbot
        command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
        configs:
            - source: nginx_config
              target: /etc/nginx/conf.d/default.conf

    certbot:
        build: ../certbot
        image: ${REGISTRY}/powerpi/certbot:0.0.3
        networks:
            - powerpi
        deploy:
            replicas: 1
        depends_on:
            - nginx
        environment:
            - EXTERNAL_HOST_NAME=${EXTERNAL_HOST_NAME}
            - EMAIL=${EMAIL}
        volumes:
            - /srv/docker-volumes/powerpi/certbot/conf:/etc/letsencrypt
            - /srv/docker-volumes/powerpi/certbot/www:/var/www/html

    db:
        image: postgres:13.0-alpine
        networks:
            - powerpi
        deploy:
            replicas: 1
        secrets:
            - powerpi_db
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdata
            - POSTGRES_DB=powerpi
            - POSTGRES_USER=powerpi
            - POSTGRES_PASSWORD_FILE=/var/run/secrets/powerpi_db
        volumes:
            - /srv/docker-volumes/powerpi/postgres/data:/var/lib/postgresql/data/pgdata

    persistence:
        build: ../persistence
        image: ${REGISTRY}/powerpi/persistence:0.1.1
        networks:
            - powerpi
        deploy:
            replicas: 1
        depends_on:
            - mosquitto
            - db
        secrets:
            - powerpi_db
        environment:
            - DB_SECRET_FILE=/var/run/secrets/powerpi_db

    energy-monitor:
        build: ../energy-monitor
        image: ${REGISTRY}/powerpi/energy-monitor:0.0.3
        networks:
            - powerpi
        deploy:
            replicas: 1
        depends_on:
            - mosquitto
        secrets:
            - powerpi_ihd
        environment:
            - IHD_SECRET_FILE=/var/run/secrets/powerpi_ihd

# docker secret create powerpi_secret /path/to/secret/file
secrets:
    powerpi_freedns:
        external: true
    powerpi_db:
        external: true
    powerpi_google_auth:
        external: true
    powerpi_jwt_auth:
        external: true
    powerpi_session:
        external: true
    powerpi_oauth:
        external: true
    powerpi_ihd:
        external: true
    powerpi_github:
        external: true

configs:
    mosquitto_config:
        file: ./config/mosquitto.conf
    nginx_config:
        file: ./config/nginx.conf

# docker network create --driver=overlay --attachable powerpi
networks:
    powerpi:
        external: true
