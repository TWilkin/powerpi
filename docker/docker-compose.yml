version: "3.3"

services:
  mosquitto:
    image: eclipse-mosquitto:2.0.8
    networks:
      - powerpi
    ports:
      - "1883:1883"
    deploy:
      replicas: 1
    volumes:
      - /var/lib/docker-volumes/mosquitto/data:/mosquitto/data
    configs:
      - source: mosquitto_config
        target: /mosquitto/config/mosquitto.conf

  deep-thought:
    build: ../deep-thought
    image: ${REGISTRY}/powerpi/deep-thought:0.4.3
    networks:
      - powerpi
    deploy:
      replicas: 1
    depends_on:
      - db
      - mosquitto
    secrets:
      - powerpi_db
    environment:
      - MQTT_ADDRESS=mqtt://mosquitto:1883
      - TOPIC_BASE=powerpi
      - DEVICES_FILE=/devices.json
      - DB_HOST=db
      - DB_SCHEMA=powerpi
      - DB_USER=powerpi
      - DB_PASSWORD_FILE=/var/run/secrets/powerpi_db
    configs:
      - source: devices_config
        target: /devices.json

  power-starter:
    build: ../power-starter
    image: ${REGISTRY}/powerpi/power-starter:0.7.1
    networks:
      - powerpi
    deploy:
      replicas: 1
    depends_on:
      - mosquitto
    environment:
      - MQTT_ADDRESS=mqtt://mosquitto:1883
      - TOPIC_BASE=powerpi
      - DEVICES_FILE=/devices.json
      - EVENTS_FILE=/events.json
    configs:
      - source: devices_config
        target: /devices.json
      - source: events_config
        target: /events.json

  device-mapper:
    build: ../device-mapper
    image: ${REGISTRY}/powerpi/device-mapper:0.0.2
    networks:
      - powerpi
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.energenie == true
    depends_on:
      - mosquitto
    environment:
      - DEVICE_FATAL=true
      - ENERGENIE_DEVICE=ENER314-RT
      - MQTT_ADDRESS=mqtt://mosquitto:1883
      - TOPIC_BASE=powerpi
      - DEVICES_FILE=/devices.json
      - CONTROLLER_NAME=energenie_controller
      - IMAGE=${REGISTRY}/powerpi/controllers/energenie:0.0.2
      - GPIOMEM=/dev/gpiomem
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: devices_config
        target: /devices.json

  harmony-controller:
    image: ${REGISTRY}/powerpi/controllers/harmony:0.0.1
    networks:
      - powerpi
    deploy:
      replicas: 1
    depends_on:
      - mosquitto
    environment:
      - MQTT_ADDRESS=mqtt://mosquitto:1883
      - TOPIC_BASE=powerpi
      - DEVICES_FILE=/devices.json
    configs:
      - source: devices_config
        target: /devices.json

  light-fantastic:
    build: ../light-fantastic
    image: ${REGISTRY}/powerpi/light-fantastic:0.1.6
    networks:
      - powerpi
    deploy:
      replicas: 1
    depends_on:
      - mosquitto
    environment:
      - MQTT_ADDRESS=mqtt://mosquitto:1883
      - TOPIC_BASE=powerpi
      - DEVICES_FILE=/devices.json
      - SCHEDULES_FILE=/schedules.json
    configs:
      - source: devices_config
        target: /devices.json
      - source: schedules_config
        target: /schedules.json

  freedns:
    build: ../freedns
    image: ${REGISTRY}/powerpi/freedns:0.0.5
    networks:
      - powerpi
    deploy:
      replicas: 1
    secrets:
      - freedns
    environment:
      - FREEDNS_USER=${FREEDNS_USER}
      - FREEDNS_PASSWORD=/var/run/secrets/freedns

  nginx:
    build: ../nginx
    image: ${REGISTRY}/powerpi/nginx:0.2.3
    networks:
      - powerpi
    ports:
      - "3001:80"
      - "3000:443"
    deploy:
      replicas: 1
    depends_on:
      - deep-thought
    secrets:
      - powerpi_users
    volumes:
      - /var/lib/docker-volumes/certbot/conf:/etc/letsencrypt
      - /var/lib/docker-volumes/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf
      - source: nginx_roles_config
        target: /etc/nginx/roles.conf

  certbot:
    build: ../certbot
    image: ${REGISTRY}/powerpi/certbot:0.0.2
    networks:
      - powerpi
    deploy:
      replicas: 1
    depends_on:
      - nginx
    environment:
      - EXTERNAL_HOST_NAME=${EXTERNAL_HOST_NAME}
      - EMAIL=${EMAIL}
    volumes:
      - /var/lib/docker-volumes/certbot/conf:/etc/letsencrypt
      - /var/lib/docker-volumes/certbot/www:/var/www/html

  db:
    image: postgres:13.0-alpine
    networks:
      - powerpi
    deploy:
      replicas: 1
    secrets:
      - powerpi_db
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=powerpi
      - POSTGRES_USER=powerpi
      - POSTGRES_PASSWORD_FILE=/var/run/secrets/powerpi_db
    volumes:
      - /var/lib/docker-volumes/postgres/data:/var/lib/postgresql/data/pgdata

  persistence:
    build: ../persistence
    image: ${REGISTRY}/powerpi/persistence:0.0.2
    networks:
      - powerpi
    deploy:
      replicas: 1
    depends_on:
      - mosquitto
      - db
    secrets:
      - powerpi_db
    environment:
      - MQTT_ADDRESS=mqtt://mosquitto:1883
      - TOPIC_BASE=powerpi
      - DB_HOST=db
      - DB_SCHEMA=powerpi
      - DB_USER=powerpi
      - DB_PASSWORD_FILE=/var/run/secrets/powerpi_db

secrets:
  freedns:
    external: true
  powerpi_users:
    external: true
  powerpi_db:
    external: true

configs:
  mosquitto_config:
    file: ./config/mosquitto.conf
  nginx_config:
    file: ./config/nginx.conf
  nginx_roles_config:
    file: ./config/roles.conf
  devices_config:
    file: ./config/devices.json
  events_config:
    file: ./config/events.json
  schedules_config:
    file: ./config/schedules.json

# docker network create --driver=overlay --attachable powerpi
networks:
  powerpi:
    external: true
