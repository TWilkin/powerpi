# @configure_input@

# paths to build directories
TARGET_DIR=$(CURDIR)/bin
LIB_DIR=$(CURDIR)/lib

# variables for tools
SERIAL_PORT?=/dev/ttyUSB0

# versions of libraries
ADAFRUIT_SENSOR_VERSION=1.1.14
ARDUINO_JSON_VERSION=v7.0.2
DHT_SENSOR_VERSION=1.4.6
EASY_BUTTON_VERSION=v2.0.3
NTPCLIENT_VERSION=3.2.1
PUBSUBCLIENT_VERSION=v2.8

# other variables
SKETCH=@PACKAGE_NAME@.ino

define download_lib
	# Download a libary from GitHub
	# $(1) Package name
	# $(2) Package version
	# $(3) GitHub user

	mkdir -p $(LIB_DIR)/$(1)-$(2)
	wget https://github.com/$(3)/$(1)/archive/$(2).tar.gz
	tar xCfz $(LIB_DIR)/$(1)-$(2) $(2).tar.gz --strip-components=1
	rm $(2).tar.gz
endef

all: compile flash monitor

common_libraries: $(LIB_DIR)/ArduinoJson-$(ARDUINO_JSON_VERSION) $(LIB_DIR)/EasyButton-$(EASY_BUTTON_VERSION) $(LIB_DIR)/NTPClient-$(NTPCLIENT_VERSION) $(LIB_DIR)/pubsubclient-$(PUBSUBCLIENT_VERSION)

# Download Arduino JSON library
$(LIB_DIR)/ArduinoJson-$(ARDUINO_JSON_VERSION):
	$(call download_lib,ArduinoJson,$(ARDUINO_JSON_VERSION),bblanchon)

# Download EasyButton library
$(LIB_DIR)/EasyButton-$(EASY_BUTTON_VERSION):
	$(call download_lib,EasyButton,$(EASY_BUTTON_VERSION),evert-arias)

# Download NTPClient library
$(LIB_DIR)/NTPClient-$(NTPCLIENT_VERSION):
	$(call download_lib,NTPClient,$(NTPCLIENT_VERSION),arduino-libraries)

# Download pubsubclient library
$(LIB_DIR)/pubsubclient-$(PUBSUBCLIENT_VERSION):
	$(call download_lib,pubsubclient,$(PUBSUBCLIENT_VERSION),knolleary)

dht22_libaries: $(LIB_DIR)/Adafruit_Sensor-$(ADAFRUIT_SENSOR_VERSION) $(LIB_DIR)/DHT-sensor-library-$(DHT_SENSOR_VERSION)

# Download Adafruit Sensor library
$(LIB_DIR)/Adafruit_Sensor-$(ADAFRUIT_SENSOR_VERSION):
	$(call download_lib,Adafruit_Sensor,$(ADAFRUIT_SENSOR_VERSION),adafruit)

# Download DHT Sensor library
$(LIB_DIR)/DHT-sensor-library-$(DHT_SENSOR_VERSION):
	$(call download_lib,DHT-sensor-library,$(DHT_SENSOR_VERSION),adafruit)

# Download certificates
$(LIB_DIR)/x1.pem:
	wget -O $@ https://letsencrypt.org/certs/isrgrootx1.pem

$(LIB_DIR)/x2.pem:
	wget -O $@ https://letsencrypt.org/certs/isrg-root-x2.pem

# Generate certificate header
powerpi-sensor/cert.h: $(LIB_DIR)/x1.pem $(LIB_DIR)/x2.pem
	cp powerpi-sensor/cert.h.in $@
	sed -i -e '/@X1@/{r $(LIB_DIR)/x1.pem' -e 'd}' $@
	sed -i -e '/@X2@/{r $(LIB_DIR)/x2.pem' -e 'd}' $@

# compile the sketch
$(TARGET_DIR)/$(SKETCH).bin: powerpi-sensor/$(SKETCH) common_libraries dht22_libaries powerpi-sensor/cert.h
	mkdir -p $(TARGET_DIR)
	arduino-cli compile \
		--fqbn esp8266:esp8266:generic \
		--libraries "$(LIB_DIR)" \
		--build-path "$(TARGET_DIR)" \
		$<

compile: $(TARGET_DIR)/$(SKETCH).bin

# deploy the binary to the device
flash: $(TARGET_DIR)/$(SKETCH).bin
	arduino-cli upload \
		--port $(SERIAL_PORT) \
		--fqbn esp8266:esp8266:generic \
		--input-dir $(TARGET_DIR)

monitor:
	screen $(SERIAL_PORT) @serial_baud@

clean:
	rm -r ${TARGET_DIR}

clean_lib:
	rm -rf ${LIB_DIR}
